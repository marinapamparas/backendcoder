<body>
    
    <div>
        <h2>Users habilitados:</h2>
        
        {{#each data}}
        <div class="divList">
        <p class="espacio"> - Usuario: {{lastName}}, {{firstName}}</p>
        <p class="espacio2"> - Rol: {{role}}</p>
        
                
            <label for="role" class="select">Cambiar rol:</label>
            <form onsubmit="handleRoleChange(event)" class="margenes">
                
                <input type="hidden" name="userId" value="{{_id}}">

                <select name="role" id="role-{{_id}}">
                        <option value="ADMIN">Admin</option>
                        <option value="PREMIUM">Premium</option>
                        <option value="USER">User</option>
                </select>

                <button class="boton1" > Aplicar cambio</button>

            </form>
            <form onsubmit="handleUserDelete(event)" class="margeness">
                <input type="hidden" name="userId" value="{{_id}}">
                <button class="boton2">Eliminar usuario</button>
            </form>

        </div>
        <br>
        {{/each}}

        <div id="messageModal" class="modal" style="display: none">
            <div class="modal-content">
                <span class="close" onclick="closeModal()">&times;</span>
                <p id="modalMessage"></p>
            </div>
        </div>

    </div>
</body>

<style>
    .body{
    background-color: rgb(128, 119, 119)
    }
    .modal {
        display: block;
        position: fixed;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: white;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
    }

    .close {
        color: red;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }
    .margenes{
        display: flex;
        justify-content: space-around;
        width: 18%;
        height: 4vh;
    }
    .boton1{
       background-color: black;
       color: white;
       display: flex;
       justify-content: center;
       align-items: center;
       text-align: center;
       border-radius: 20px;
       border: solid black;
       margin-left: 10%;
       padding-left: 5%;
       padding-right: 5%;
    }
    .boton2{
        margin-left: 200%;
        width: 110%;
        background-color: black;
       color: white;
       display: flex;
       justify-content: center;
       align-items: center;
       text-align: center;
       border-radius: 20px;
       border: solid black;
    }
    .divList{
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        border: 1px solid grey;
        height: 10vh;
        width: 90vw;
        
    }
    .espacio{
        padding-top: 1%;
        padding-left: 2%;
    }
    .espacio2{
        padding-top: 1%;
        padding-left: 2%;
        margin-right: 12%;
    }
    .select{
        padding-left: 2%;
        padding-right: 1%;
    }
</style>

<script>

async function handleRoleChange(event) {
    event.preventDefault();  // Prevenir el envío tradicional del formulario
    
    const form = event.target;
    const userId = form.querySelector('input[name="userId"]').value;
    const role = form.querySelector('select[name="role"]').value;
    
    try {
        const response = await fetch('/api/users/updaterole', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ userId, role })
        });
        
        const result = await response.json();
        
        // Mostrar el mensaje en el modal
        const modalMessage = document.getElementById('modalMessage');
        modalMessage.textContent = result.message;

        // Mostrar el modal
        const modal = document.getElementById('messageModal');
        modal.style.display = 'block';

    } catch (error) {
        console.error('Error al cambiar el rol:', error);
    }
}

async function handleUserDelete(event) {
    event.preventDefault();

    const form = event.target;
    const userId = form.querySelector('input[name="userId"]').value;

    try {
        const response = await fetch('/api/users/deleteuser', {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ userId }),
        });

        const result = await response.json();

        // Mostrar el mensaje en el modal
        const modalMessage = document.getElementById('modalMessage');
        modalMessage.textContent = result.message;

        // Mostrar el modal
        const modal = document.getElementById('messageModal');
        modal.style.display = 'block';

        // Opcionalmente, podrías recargar la página o eliminar el usuario de la vista
        // location.reload(); // Recargar la página para actualizar la lista de usuarios
    } catch (error) {
        console.error('Error al eliminar el usuario:', error);
    }
}


function closeModal() {
    const modal = document.getElementById('messageModal');
    modal.style.display = 'none';
}


window.onclick = function(event) {
    const modal = document.getElementById('messageModal');
    if (event.target == modal) {
        modal.style.display = 'none';
    }
}
</script> 